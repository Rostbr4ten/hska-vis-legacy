kubectl create secret generic webshop-db-secret --from-literal=user='webshopuser' 
kubectl create secret generic webshop-db-secret --from-literal=password='240b2c6d58ff2ce2f508b49f' 
kubectl create secret generic webshop-db-secret --from-literal=dbname='webshop'

kubectl create secret generic category-db-secret --from-literal=user='categoryUser' 
kubectl create secret generic category-db-secret --from-literal=password='74523a732be65aff' 
kubectl create secret generic category-db-secret --from-literal=dbname='category'

kubectl create secret generic product-db-secret --from-literal=user=productUser
kubectl create secret generic product-db-secret --from-literal=password='ae4557bc8900ec' 
kubectl create secret generic product-db-secret --from-literal=dbname='product'

kubectl edit secret webshop-db-secret
category-db-secret
generic product-db-secret

kubectl apply -f configmap-database.yaml

create config map, by the sql statement: kubectl create configmap db-init-scripts --from-file=init.sql=create-tables.sql
    Mount this config map as volume in db container
    at init script will be applied

ergebnis ist in
kubectl get configmap db-init-scripts -o yaml